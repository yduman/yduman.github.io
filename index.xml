<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yadullah Duman</title><link>http://www.yduman.dev/</link><description>Recent content on Yadullah Duman</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 28 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://www.yduman.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Projects</title><link>http://www.yduman.dev/projects/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/projects/</guid><description>&lt;p>Here are some side and open source projects where I am currently investing or have invested some good amount of time. These are mostly projects that either solved my own problems or I found interesting enough for contribution. Besides these projects, I am mainly busy with customer projects that I won&amp;rsquo;t list here for obvious reasons.&lt;/p>
&lt;h2 id="currently-active">
 Currently Active
 &lt;a class="heading-link" href="#currently-active">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/arc42/quality.arc42.org-site" class="external-link" target="_blank" rel="noopener">&lt;strong>quality.arc42.org&lt;/strong>&lt;/a> Quality requirements and goals for software and system architectures.&lt;/p></description></item><item><title>Uses</title><link>http://www.yduman.dev/uses/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/uses/</guid><description>&lt;p>Things I use to create software&lt;/p>
&lt;p>&lt;em>Last updated: January 28, 2025&lt;/em>&lt;/p>
&lt;h1 id="editor">
 Editor
 &lt;a class="heading-link" href="#editor">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/" class="external-link" target="_blank" rel="noopener">Visual Studio Code&lt;/a> or &lt;a href="https://www.jetbrains.com/idea/" class="external-link" target="_blank" rel="noopener">IntelliJ Ultimate&lt;/a>&lt;/li>
&lt;li>Fonts: &lt;a href="https://www.jetbrains.com/lp/mono/" class="external-link" target="_blank" rel="noopener">JetBrains Mono&lt;/a>&lt;/li>
&lt;li>Theme: &lt;a href="https://draculatheme.com/" class="external-link" target="_blank" rel="noopener">Dracula&lt;/a>&lt;/li>
&lt;li>Icons: &lt;a href="https://github.com/material-extensions/vscode-material-icon-theme" class="external-link" target="_blank" rel="noopener">Material Icon Theme&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="terminal">
 Terminal
 &lt;a class="heading-link" href="#terminal">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>Emulator: &lt;a href="https://ghostty.org/" class="external-link" target="_blank" rel="noopener">Ghostty&lt;/a>&lt;/li>
&lt;li>Shell: &lt;a href="https://ohmyz.sh/" class="external-link" target="_blank" rel="noopener">oh-my-zsh&lt;/a>&lt;/li>
&lt;li>Prompt: &lt;a href="https://starship.rs/" class="external-link" target="_blank" rel="noopener">Starship&lt;/a>&lt;/li>
&lt;li>Theme: &lt;a href="https://draculatheme.com/" class="external-link" target="_blank" rel="noopener">Dracula&lt;/a>&lt;/li>
&lt;li>Font: &lt;a href="https://github.com/tonsky/FiraCode" class="external-link" target="_blank" rel="noopener">Fira Code Nerd Font&lt;/a>&lt;/li>
&lt;li>Tools:
&lt;ul>
&lt;li>&lt;a href="https://github.com/atuinsh/atuin" class="external-link" target="_blank" rel="noopener">atuin&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dandavison/delta" class="external-link" target="_blank" rel="noopener">delta&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/eza-community/eza" class="external-link" target="_blank" rel="noopener">eza&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jesseduffield/lazygit" class="external-link" target="_blank" rel="noopener">lazygit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ajeetdsouza/zoxide" class="external-link" target="_blank" rel="noopener">zoxide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-autosuggestions" class="external-link" target="_blank" rel="noopener">zsh-autosuggestions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting" class="external-link" target="_blank" rel="noopener">zsh-syntax-highlighting&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="desktop-apps">
 Desktop Apps
 &lt;a class="heading-link" href="#desktop-apps">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>Browser: &lt;a href="https://brave.com/" class="external-link" target="_blank" rel="noopener">Brave&lt;/a>&lt;/li>
&lt;li>Password manager: &lt;a href="https://1password.com/" class="external-link" target="_blank" rel="noopener">1Password&lt;/a>&lt;/li>
&lt;li>Window manager: &lt;a href="https://rectangleapp.com/" class="external-link" target="_blank" rel="noopener">Rectangle&lt;/a>&lt;/li>
&lt;li>Keymaps: &lt;a href="https://karabiner-elements.pqrs.org/" class="external-link" target="_blank" rel="noopener">Karabiner Elements&lt;/a>&lt;/li>
&lt;li>Notes: &lt;a href="https://obsidian.md/" class="external-link" target="_blank" rel="noopener">Obsidian&lt;/a>&lt;/li>
&lt;li>Music: &lt;a href="https://open.spotify.com/" class="external-link" target="_blank" rel="noopener">Spotify&lt;/a>&lt;/li>
&lt;li>Todo: Regular macOS Reminders app&lt;/li>
&lt;/ul>
&lt;h1 id="hardware">
 Hardware
 &lt;a class="heading-link" href="#hardware">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>MacBook Pro 16&amp;quot; M2 Max 64GB&lt;/li>
&lt;li>Monitors: 2x Gigabyte M28U 4K 144Hz&lt;/li>
&lt;li>Mic: Blue Yeti&lt;/li>
&lt;li>Headphones: Beyerdynamic DT990 Pro&lt;/li>
&lt;li>Keyboard: Monsgeek M1W with Monacokeys WoB keycaps and Akko V3 Piano Pro switches&lt;/li>
&lt;li>Mouse: Logitech G502&lt;/li>
&lt;/ul></description></item><item><title>How to turn off logging in NestJS tests</title><link>http://www.yduman.dev/posts/nestjs-testing-disable-logging/</link><pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/nestjs-testing-disable-logging/</guid><description>&lt;p>This post will be very short. I want to share one approach on how to deal with the Logger class when running NestJS unit tests. In one of our projects, we had a small issue, that when running tests, the logger would start logging when certain branches of the code were reached. Obviously, these branches should log when running on production, but for tests, we didn&amp;rsquo;t care much.&lt;/p>
&lt;h2 id="example-scenario">
 Example Scenario
 &lt;a class="heading-link" href="#example-scenario">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Imagine this very simplified scenario. You want to test all branches of &lt;code>getAllUsers&lt;/code>. The error case test would always execute the error log.&lt;/p></description></item><item><title>About</title><link>http://www.yduman.dev/about/</link><pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/about/</guid><description>&lt;p>Hey, I&amp;rsquo;m Yadu. Welcome to my digital garden! Everything that you see here is written by me and revolves around my own opinion and findings. The purpose is to share knowledge and sometimes some non-trivial topics that you usually encounter in real life projects.&lt;/p>
&lt;p>Currently, I work as a Lead Software Engineer at &lt;a href="https://maibornwolff.de" class="external-link" target="_blank" rel="noopener">MaibornWolff&lt;/a>.&lt;/p>
&lt;p>Over the years, I found a passion for creating tailored software together with talented people. I work primarily in a full-stack/cross-platform landscape, using any programming language that does the job. I am also coaching people, helping them grow in their career and giving them some tips &amp;amp; tricks on how to become a successful engineer. In projects, I care a lot about rich and proactive communication. It&amp;rsquo;s the most important skill any engineer should have in my opinion.&lt;/p></description></item><item><title>My first NPM library: rmby</title><link>http://www.yduman.dev/posts/rmby/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/rmby/</guid><description>&lt;p>Recently, I released version 1.0 of my first Node.js library called &lt;a href="https://www.npmjs.com/package/rmby" class="external-link" target="_blank" rel="noopener">rmby&lt;/a>. In this post, I want to explain what it is, what it does and how you can use it. On the bottom of this post you will find the respective links.&lt;/p>
&lt;h2 id="what-is-rmby">
 &lt;strong>What is rmby?&lt;/strong>
 &lt;a class="heading-link" href="#what-is-rmby">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>rmby (&lt;em>“remove by”&lt;/em>) is a zero-dependency Node.js library for removing files asynchronously on a given directory by certain filter criteria’s. It provides a &lt;a href="https://martinfowler.com/bliki/FluentInterface.html" class="external-link" target="_blank" rel="noopener">fluent interface&lt;/a> that guides the user when creating the remove query.&lt;/p></description></item><item><title>How to setup WSL with Windows Terminal, ZSH and powerlevel10k</title><link>http://www.yduman.dev/posts/wsl-setup/</link><pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/wsl-setup/</guid><description>&lt;p>I wanted to share with you my recent WSL2 setup on my new workstation which was ridiculously easy to do!&lt;/p>
&lt;h2 id="what-i-wanted">
 &lt;strong>What I wanted&lt;/strong>
 &lt;a class="heading-link" href="#what-i-wanted">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Basically I wanted the same setup that I would run on my MacBook and my Linux machines:&lt;/p>
&lt;ul>
&lt;li>A configurable terminal similar to &lt;a href="https://www.iterm2.com/" class="external-link" target="_blank" rel="noopener">iTerm2&lt;/a> or &lt;a href="https://gnunn1.github.io/tilix-web/" class="external-link" target="_blank" rel="noopener">Tilix&lt;/a>&lt;/li>
&lt;li>ZSH shell with &lt;a href="https://ohmyz.sh/" class="external-link" target="_blank" rel="noopener">oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/romkatv/powerlevel10k" class="external-link" target="_blank" rel="noopener">Powerlevel10k&lt;/a> theme&lt;/li>
&lt;li>Docker and VS Code support&lt;/li>
&lt;/ul>
&lt;h2 id="what-you-can-expect">
 &lt;strong>What you can expect&lt;/strong>
 &lt;a class="heading-link" href="#what-you-can-expect">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>In the following, I will guide you step by step on how I did my setup. A ZSH shell running inside Windows Terminal with powerlevel10k, syntax highlighting, automatic suggestions and Docker support.&lt;/p></description></item><item><title>Preact: Alternative to React</title><link>http://www.yduman.dev/posts/preact/</link><pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/preact/</guid><description>&lt;p>The &lt;a href="https://www.maibornwolff.de/know-how/preact-alternative-zu-react/" class="external-link" target="_blank" rel="noopener">original post&lt;/a> is written in German on the MaibornWolff website.&lt;/p>
&lt;p>The following is a plain translation of it.&lt;/p>
&lt;hr>
&lt;p>In this blog post, I want to introduce you to &lt;a href="https://preactjs.com/" class="external-link" target="_blank" rel="noopener">Preact&lt;/a>. About a year ago, I had the opportunity to test it during a spike. As a React fan, it was exciting to try out a good alternative, and I was impressed by its performance. Recently, the new version 10, &amp;ldquo;Preact X,&amp;rdquo; was released, bringing additional new features.&lt;/p></description></item><item><title>How to use the Context API in React with Hooks</title><link>http://www.yduman.dev/posts/react-context/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/react-context/</guid><description>&lt;p>In one of my last posts, I shared the announcement of Hooks by the React team with you. About two weeks ago, the React team finally released the Hooks API with version 16.8. In this blogpost I want to share one approach of how to use the &lt;code>useContext&lt;/code> Hook along with &lt;code>useReducer&lt;/code> in order to create and update context. I will not explain how the Context or Hooks API work. If you are not familiar with them, then please read the &lt;a href="https://reactjs.org/docs/getting-started.html" class="external-link" target="_blank" rel="noopener">documentation&lt;/a>. Furthermore, this post is also just a reference for me, since I was exploring this Hook lately and was fascinated of its ease.&lt;/p></description></item><item><title>Get Hooked with React Hooks</title><link>http://www.yduman.dev/posts/react-hooks/</link><pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate><guid>http://www.yduman.dev/posts/react-hooks/</guid><description>&lt;p>So yesterday &lt;a href="https://conf.reactjs.org/" class="external-link" target="_blank" rel="noopener">ReactConf&lt;/a> started with the opening keynote of Sophie Alpert and Dan Abramov about “React Today and Tomorrow”. Dan Abramov introduced &lt;a href="https://reactjs.org/docs/hooks-intro.html" class="external-link" target="_blank" rel="noopener">Hooks&lt;/a>, which is currently in React v16.7.0-alpha and in a RFC status. I was really hooked (pun intended) about the new possibilites with the new API and many library developers immediately started to try it out and they were amazed too.&lt;/p>
&lt;h2 id="why-hooks">
 &lt;strong>Why Hooks?&lt;/strong>
 &lt;a class="heading-link" href="#why-hooks">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>The React team observed over time, that it is hard to reuse stateful logic between components. Many developers used patterns like render props and higher-order components to solve this, but most of the time you ended up in a “wrapper hell”. The Hooks API will allow developers to reuse stateful logic without changing the component hierarchy.&lt;/p></description></item></channel></rss>